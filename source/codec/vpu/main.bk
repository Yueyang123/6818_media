/*
 * @Description: 
 * @Autor: YURI
 * @Date: 2022-01-24 06:16:22
 * @LastEditors: YURI
 * @LastEditTime: 2022-01-25 19:19:58
 */
#include "vpu.h"
#include "stdio.h"
#include "stdlib.h"
// #include "ffmpeg_sws.h"

#define WIDTH 1024
#define HEIGHT 600

int main()
{
	char* nv12;
    char *h264;
	int length;
	int index=0;
	int read_num=1;
	VID_TYPE_E mode =NX_JPEG_ENC;
	vpu Vpu(WIDTH,HEIGHT,25,mode);
	FILE* file_fd_nv12=fopen("./test_1024x600.yuv","r") ;
	FILE* file_fd_h264=fopen("./encode.mpeg","wr");
	//ffmpeg_sws_interface* ff_sws1=new ffmpeg_sws_interface(WIDTH,HEIGHT,AV_PIX_FMT_NV12,AV_PIX_FMT_RGB24);
	nv12=(char*)malloc(WIDTH*HEIGHT*3/2);
	fwrite(Vpu.seqBuffer,Vpu.seqsize,1,file_fd_h264);
	while(read_num>0){
		read_num=fread(nv12,WIDTH*HEIGHT*3/2,1,file_fd_nv12);
		h264=Vpu.DecodeNV12_To_H264(nv12,&length);
		index++;
		printf("LENGTH : %d INDEX : %d \r\n",length,index);
		if(mode==NX_JPEG_ENC)fwrite(Vpu.seqBuffer,Vpu.seqsize,1,file_fd_h264);
		fwrite(h264,length,1,file_fd_h264);
	}
	printf("END OK \r\n");
	return 0;
}
#include <unistd.h>		//	getopt & optarg
#include <stdlib.h>		//	atoi
#include <stdio.h>		//	printf
#include <string.h>		//	strdup

#include <Util.h>

extern int32_t VpuDecMain( CODEC_APP_DATA *pAppData );
extern int32_t VpuEncMain( CODEC_APP_DATA *pAppData );
extern int32_t VpuJpgMain( CODEC_APP_DATA *pAppData );

enum
{
	MODE_NONE,
	DECODER_MODE,
	ENCODER_MODE,
	JPEG_MODE,
	MODE_MAX
};

void print_usage( const char *appName )
{
	printf(
		"Usage : %s [options] -i [input file], [M] = mandatory, [O] = Optional \n"
		"  common options :\n"
		"     -m [mode]                  [O]   : 1:decoder mode, 2:encoder mode (def:decoder mode)\n"
		"     -i [input file name]       [M]   : input media file name (When is camera encoder, the value set NULL\n"
		"     -o [output file name]      [O]   : output file name\n"
		"     -d [x],[y],[width][height] [O]   : input image's resolution(encoder file mode)\n"
		"     -h : help\n"
		" -------------------------------------------------------------------------------------------------------------------\n"
		"  only encoder options :\n"
		"     -r [recon file name]       [O]   : output reconstructed image file name\n"
		"     -c [codec]                 [O]   : 0:H.264, 1:Mp4v, 2:H.263, 3:JPEG (def:H.264)\n"
		"     -s [width],[height]        [M]   : input image's size\n"
		"     -f [fps Num],[fps Den]     [O]   : input image's framerate(def:30/1) \n"
		"     -b [Kbitrate]              [M]   : target Kilo bitrate (0:VBR mode, other:CBR mode)\n"
		"     -g [gop size]              [O]   : gop size (def:framerate) \n"
		"     -q [quality or QP]         [O]   : Jpeg Quality or Other codec Quantization Parameter(When is VBR, it is valid) \n"
		"     -v [VBV]                   [O]   : VBV Size (def:2Sec)\n"
		"     -x [Max Qp]                [O]   : Maximum Qp \n"
		"     -l [RC Algorithm]          [O]   : Rate Control Algorithm (0:Nexell, 1:CnM) \n"
		"     -a [angle]                 [O]   : Jpeg Rotate Angle\n"
		" ===================================================================================================================\n\n"
		,appName );
	printf(
		"Examples\n" );
	printf(
		" Decoder Mode :\n"
		"     #> %s -i [input filename]\n", appName );
	printf(
		" Encoder Camera Mode :\n"
		"     #> %s -m 2 -o [output filename]\n", appName );
	printf(
		" Encoder File Mode :(H.264, 1920x1080, 10Mbps, 30fps, 30 gop)\n"
		"     #> %s -m 2 -i [input filename] -o [output filename] -r 1920,1080 -f 30,1 -b 10000 -g 30 \n", appName );
	printf(
		" JPEG Mode :\n"
		"     #> %s -m 2 -o [output filename] -c 3 -q 100\n", appName );
}
